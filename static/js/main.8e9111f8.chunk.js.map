{"version":3,"sources":["Calendar/Day/index.js","Calendar/DayGrid/index.js","Calendar/SearchDate/index.js","Calendar/Reminder/index.js","Calendar/index.js","App.js","index.js"],"names":["Day","props","state","isBlank","width","size","height","className","this","onClick","remindDate","number","style","fontSize","font","Component","Days","offset","days","restset","weekname","Offset","Present","OffsetRight","prevProps","offsetlet","x","dayweek","push","setState","dias","monthdays","comparison","offsetright","map","week","key","day","MonthYearSearch","month","currentMonth","year","currentYear","eventHandler","bind","Verify","event","changeDate","preventDefault","isNaN","Number","target","value","String","length","id","onSubmit","type","onChange","DateReminder","date","Date","getUTCMonth","getUTCDate","getUTCFullYear","removeReminder","Calendar","monthNames","remindDates","RawChangeDate","RemindDate","ForgetDate","getTime","indexOf","item","splice","isForward","century","decade","remainder","weekDay","parseInt","console","log","ChangeDate","MonthName","GetWeekDay","CheckDate","daycode","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e9111f8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './index.css';\r\n\r\nexport default class Day extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isBlank: this.props.isBlank ? \"blank\" : \"day\",\r\n      width: this.props.width || this.props.size || \"35px\",\r\n      height: this.props.height || this.props.size || \"35px\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button className={this.state.isBlank} onClick={() => this.props.remindDate(this.props.number)} style={{width: this.state.width, height: this.state.height, fontSize: this.props.font}}>\r\n        {this.props.number}\r\n      </button>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './index.css';\r\n\r\nimport Day from '../Day';\r\n\r\nexport default class Days extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      offset: [],\r\n      days: [],\r\n      restset: [],\r\n      weekname: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.Offset();\r\n    this.Present();\r\n    this.OffsetRight();\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if(this.props !== prevProps){\r\n      this.Offset();\r\n      this.Present();\r\n      this.OffsetRight();\r\n    }\r\n  }\r\n\r\n  Offset(){\r\n    let offsetlet = [];\r\n    for (let x = 0; x < this.props.dayweek; x++) {\r\n      offsetlet.push(x);\r\n    }\r\n    this.setState({ offset: offsetlet });\r\n  }\r\n\r\n  Present(){\r\n    let dias = [];\r\n    for (let x = 1; x <= this.props.monthdays; x++) {\r\n      dias.push(x);\r\n    }\r\n    this.setState({ days: dias });\r\n  }\r\n\r\n  OffsetRight(){\r\n    let offset = 0;\r\n    let comparison = this.props.monthdays + this.props.dayweek;\r\n\r\n    if (comparison > 28 && comparison < 35)\r\n      offset = 35 - comparison;\r\n    else if (comparison > 35 && comparison < 42)\r\n      offset = 42 - comparison;\r\n\r\n    let offsetright = [];\r\n    for (let x = 1; x <= offset; x++) {\r\n      offsetright.push(x);\r\n    }\r\n    this.setState({ restset: offsetright });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"calendar-grid\">\r\n          {this.state.weekname.map(week => {\r\n            return <Day key={week} isBlank size=\"35px\" height=\"15px\" number={week} font=\"10px\" />;\r\n          })}\r\n          {this.state.offset.map(days => {\r\n            return <Day key={days + 40} isBlank size=\"35px\" number=\"\" font=\"10px\" />;\r\n          })}\r\n          {this.state.days.map(day => {\r\n            return <Day key={day} size=\"35px\" number={day} font=\"10px\" remindDate={this.props.remindDate} />;\r\n          })}\r\n          {this.state.restset.map(days => {\r\n            return <Day key={days + 50} isBlank size=\"35px\" number=\"\" font=\"10px\" />;\r\n          })}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './index.css';\r\n\r\nexport default class MonthYearSearch extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      month: this.props.currentMonth,\r\n      year: this.props.currentYear,\r\n    };\r\n\r\n    this.eventHandler = this.eventHandler.bind(this);\r\n    this.Verify = this.Verify.bind(this);\r\n  }\r\n\r\n  Verify(event){\r\n    if(this.state.month > 12 || this.state.month < 1 || this.state.year === 0)\r\n      return;\r\n    this.props.changeDate(this.state.month, this.state.year);\r\n    event.preventDefault();\r\n  }\r\n\r\n  eventHandler(event){\r\n    if(isNaN(Number(event.target.value)) || String(event.target.value).length > 4)\r\n      return;\r\n    this.setState({ [event.target.id]: Number(event.target.value) });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <form className=\"form-grid\" onSubmit={this.Verify}>\r\n          <span className=\"label\" >Month:</span>\r\n          <input className=\"input\" id=\"month\" type=\"text\" onChange={this.eventHandler} value={this.state.month} ></input>\r\n          <span className=\"label\" >Year:</span>\r\n          <input className=\"input\" id=\"year\" type=\"text\" onChange={this.eventHandler} value={this.state.year} ></input>\r\n          <button className=\"button\" type=\"submit\">GO!</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './index.css';\r\n\r\nexport default class DateReminder extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      date: this.props.date,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let month = new Date(this.state.date).getUTCMonth();\r\n    if(month === 0) month = 12;\r\n\r\n    return (\r\n      <div className=\"datereminder-container\">\r\n        <span className=\"date-name\" >{new Date(this.state.date).getUTCDate()}/{month}/{new Date(this.state.date).getUTCFullYear()}</span>\r\n        <button className=\"remove\" onClick={() => this.props.removeReminder(this.state.date)} >Remove</button>\r\n        <button className=\"goto\" onClick={() => this.props.changeDate(month, new Date(this.state.date).getUTCFullYear())} >Go to</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './index.css';\r\n\r\nimport Days from './DayGrid';\r\nimport MonthYearSearch from './SearchDate';\r\nimport DateReminder from './Reminder';\r\n\r\nexport default class Calendar extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      day: new Date().getUTCDate(),\r\n      month: new Date().getUTCMonth() + 1,\r\n      year: new Date().getUTCFullYear(),\r\n      monthNames: [\"\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\r\n      remindDates: [ 968209200000 ],\r\n    };\r\n\r\n    this.RawChangeDate = this.RawChangeDate.bind(this);\r\n    this.RemindDate = this.RemindDate.bind(this);\r\n    this.ForgetDate = this.ForgetDate.bind(this);\r\n  }\r\n\r\n  RemindDate(day){\r\n    let date = new Date(this.state.year, this.state.month, day).getTime();\r\n    if(this.state.remindDates.indexOf(date) > -1)\r\n      return;\r\n    this.setState({ remindDates: [...this.state.remindDates, date] });\r\n  }\r\n\r\n  ForgetDate(date){\r\n    let item = this.state.remindDates.indexOf(date);\r\n    let remindDates = this.state.remindDates;\r\n    remindDates.splice(item, 1);\r\n    this.setState({ remindDates });\r\n  }\r\n\r\n  MonthName(){\r\n    return this.state.monthNames[this.state.month];\r\n  }\r\n\r\n  RawChangeDate(month, year){\r\n    this.setState({ month, year });\r\n  }\r\n\r\n  ChangeDate(isForward){\r\n    let month = 0;\r\n    isForward ? month = this.state.month + 1 : month = this.state.month - 1;\r\n    if(month > 12){\r\n      month -= 12;\r\n      this.setState({ year: this.state.year + 1 });\r\n    }\r\n    else if(month < 1){\r\n      month += 12 ;\r\n      this.setState({ year: this.state.year - 1 });\r\n    }\r\n    this.setState({ month });\r\n  }\r\n\r\n  CheckDate(month, year){\r\n    let AllMonthDays = [0];\r\n\r\n    if ((year % 4 === 0 && year % 100 !== 0 ) || (year % 400 === 0)){\r\n      AllMonthDays = [0,31,29,31,30,31,30,31,31,30,31,30,31];\r\n    } else AllMonthDays = [0,31,28,31,30,31,30,31,31,30,31,30,31];\r\n\r\n    return AllMonthDays[month];\r\n  }\r\n\r\n  GetWeekDay(day, month, year){\r\n    if( isNaN(day) || isNaN(month) || isNaN(year) || day <= 0 || day > 31 || month <= 0 || month > 12 || year <= 0){\r\n      console.log(\"Invalid Date\");\r\n      return;\r\n    }\r\n\r\n    //Discovering week day\r\n    let century = year % 400;\r\n    let decade = century;\r\n  \r\n    if(century < 100)\r\n      century = 2;\r\n    else if(century < 200){\r\n      century = 0;\r\n      decade -= 100;\r\n    }\r\n    else if(century < 300){\r\n      century = 5;\r\n      decade -= 200;\r\n    }\r\n    else if(century < 400){\r\n      century = 3;\r\n      decade -= 300;\r\n    }\r\n  \r\n    let division = parseInt(decade / 12);\r\n    let remainder = decade % 12;\r\n    let secondDivision = parseInt(remainder / 4);\r\n\r\n    let weekDay = century + division + remainder + secondDivision;\r\n\r\n    //Discovering reference doomsday\r\n    switch (month) {\r\n      case 1:\r\n        if ( ( year % 4 === 0 && year % 100 !== 0 ) || (year % 400 === 0) ){\r\n          weekDay -= 4 - day;\r\n          break;\r\n        }\r\n        weekDay -= 3 - day;\r\n        break;\r\n      case 2:\r\n        if ( ( year % 4 === 0 && year % 100 !== 0 ) || (year % 400 === 0) ){\r\n          weekDay -= 29 - day;\r\n          break;\r\n        }\r\n        weekDay -= 28 - day;\r\n        break;\r\n      case 3:\r\n        weekDay -= 14 - day;\r\n        break;\r\n      case 4:\r\n        weekDay -= 4 - day;\r\n        break;    \r\n      case 5:\r\n        weekDay -= 9 - day;\r\n        break;\r\n      case 6:\r\n        weekDay -= 6 - day;\r\n        break;\r\n      case 7:\r\n        weekDay -= 11 - day;\r\n        break;\r\n      case 8:\r\n        weekDay -= 8 - day;\r\n        break;\r\n      case 9:\r\n        weekDay -= 5 - day;\r\n        break;\r\n      case 10:\r\n        weekDay -= 10 - day;\r\n        break;\r\n      case 11:\r\n        weekDay -= 7 - day;\r\n        break;\r\n      case 12:\r\n        weekDay -= 12 - day;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    while(weekDay > 6){\r\n      weekDay -= 7;\r\n    }\r\n  \r\n    return weekDay;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div>\r\n          <MonthYearSearch changeDate={this.RawChangeDate} currentMonth={this.state.month} currentYear={this.state.year} />\r\n        </div>\r\n        <div className=\"top-container\">\r\n          <span className=\"material-icons button-month-left\" onClick={() => this.ChangeDate(false)} >keyboard_arrow_left</span>\r\n          <div className=\"date\">\r\n            <span className=\"month\" >{this.MonthName()} - </span>\r\n            <span className=\"year\" >{this.state.year}</span>\r\n          </div>\r\n          <span className=\"material-icons button-month-right\" onClick={() => this.ChangeDate(true)} >keyboard_arrow_right</span>\r\n        </div>\r\n        <div>\r\n          <Days dayweek={this.GetWeekDay(1,this.state.month,this.state.year)} monthdays={this.CheckDate(this.state.month, this.state.year)} remindDate={this.RemindDate} />\r\n        </div>\r\n        <div className=\"reminder-block\">\r\n          <div className=\"reminder-text\">\r\n            <span className=\"reminder-title\" >Dates to Remind</span>\r\n            <br/>\r\n            <span className=\"reminder-tip\" >click in some day to remind it</span>\r\n          </div>\r\n          {this.state.remindDates.map(date => {\r\n            let daycode = new Date(date).getTime();\r\n            return <DateReminder key={daycode} id={daycode} date={daycode} removeReminder={this.ForgetDate} changeDate={this.RawChangeDate} />  \r\n          })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\nimport './index.css';\nimport Calendar from './Calendar';\n\nexport default class App extends Component{\n  render(){\n    return (\n      <div className=\"main\">\n        <Calendar />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}