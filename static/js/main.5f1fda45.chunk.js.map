{"version":3,"sources":["Calendar/Day/index.js","Calendar/DayGrid/index.js","Calendar/SearchDate/index.js","Calendar/Reminder/index.js","Calendar/index.js","App.js","index.js"],"names":["Day","props","state","isBlank","width","size","height","font","number","className","this","onClick","undefined","remindDate","style","fontSize","Component","Days","offset","days","restset","weekname","currentFirstDay","monthDays","setState","CheckDate","month","year","GetWeekDay","Offset","Present","OffsetRight","prevProps","day","isNaN","centuryDoomsday","decade","decadeRemainder","weekDay","parseInt","console","log","dayweek","x","push","monthdays","comparison","map","week","key","MonthYearSearch","currentMonth","currentYear","eventHandler","bind","Verify","event","alert","preventDefault","changeDate","Number","target","value","String","length","id","onSubmit","type","onChange","DateReminder","date","Date","getUTCMonth","getUTCDate","getUTCFullYear","removeReminder","Calendar","monthNames","remindDates","RawChangeDate","RemindDate","ForgetDate","getDate","getTime","indexOf","item","splice","isForward","ChangeDate","MonthName","daycode","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f1fda45.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './index.css';\r\n\r\nexport default class Day extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isBlank: this.props.isBlank ? \"blank\" : \"day\",\r\n      width: this.props.width || this.props.size || \"35px\",\r\n      height: this.props.height || this.props.size || \"35px\",\r\n      font: this.props.font || \"10px\",\r\n      number: this.props.number || \"\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button className={this.state.isBlank}\r\n      onClick={() => { if(this.state.number > 0 && this.props.remindDate !== undefined) this.props.remindDate(this.state.number) }} \r\n      style={{width: this.state.width, height: this.state.height, fontSize: this.state.font}}>\r\n        {this.state.number}\r\n      </button>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './index.css';\r\n\r\nimport Day from '../Day';\r\n\r\nexport default class Days extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      offset: [],\r\n      days: [],\r\n      restset: [],\r\n      weekname: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\r\n      currentFirstDay: 0,\r\n      monthDays: 1,\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({ monthDays: this.CheckDate(this.props.month, this.props.year),\r\n      currentFirstDay: this.GetWeekDay(1, this.props.month, this.props.year),\r\n    },\r\n    () => this.setState({ offset: this.Offset(this.state.currentFirstDay),\r\n      days: this.Present(this.state.monthDays),\r\n      restset: this.OffsetRight(this.state.monthDays, this.state.currentFirstDay) })\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if(this.props !== prevProps){\r\n      this.setState({ monthDays: this.CheckDate(this.props.month, this.props.year),\r\n        currentFirstDay: this.GetWeekDay(1, this.props.month, this.props.year),\r\n      },\r\n      () => this.setState({ offset: this.Offset(this.state.currentFirstDay),\r\n        days: this.Present(this.state.monthDays),\r\n        restset: this.OffsetRight(this.state.monthDays, this.state.currentFirstDay) })\r\n      );  \r\n    }\r\n  }\r\n  \r\n  CheckDate(month, year){\r\n    let AllMonthDays = [0];\r\n\r\n    if ((year % 4 === 0 && year % 100 !== 0 ) || (year % 400 === 0)){\r\n      AllMonthDays = [0,31,29,31,30,31,30,31,31,30,31,30,31];\r\n    } else AllMonthDays = [0,31,28,31,30,31,30,31,31,30,31,30,31];\r\n\r\n    return AllMonthDays[month];\r\n  }\r\n\r\n  GetWeekDay(day, month, year){\r\n    if( isNaN(day) || isNaN(month) || isNaN(year) || day <= 0 || day > 31 || month <= 0 || month > 12 || year <= 0){\r\n      console.log(\"Invalid Date\");\r\n      return;\r\n    }\r\n\r\n    //Discovering week day\r\n    let centuryDoomsday = year % 400;\r\n    let decade = centuryDoomsday;\r\n  \r\n    if(centuryDoomsday < 100)\r\n      centuryDoomsday = 2;\r\n    else if(centuryDoomsday < 200){\r\n      centuryDoomsday = 0;\r\n      decade -= 100;\r\n    }\r\n    else if(centuryDoomsday < 300){\r\n      centuryDoomsday = 5;\r\n      decade -= 200;\r\n    }\r\n    else if(centuryDoomsday < 400){\r\n      centuryDoomsday = 3;\r\n      decade -= 300;\r\n    }\r\n  \r\n    let decadeDivision = parseInt(decade / 12);\r\n    let decadeRemainder = decade % 12;\r\n    let secondDivision = parseInt(decadeRemainder / 4);\r\n\r\n    let weekDay = centuryDoomsday + decadeDivision + decadeRemainder + secondDivision;\r\n\r\n    //Discovering reference doomsday\r\n    switch (month) {\r\n      case 1:\r\n        if ( ( year % 4 === 0 && year % 100 !== 0 ) || (year % 400 === 0) ){\r\n          weekDay -= 4 - day;\r\n          break;\r\n        }\r\n        weekDay -= 3 - day;\r\n        break;\r\n      case 2:\r\n        if ( ( year % 4 === 0 && year % 100 !== 0 ) || (year % 400 === 0) ){\r\n          weekDay -= 29 - day;\r\n          break;\r\n        }\r\n        weekDay -= 28 - day;\r\n        break;\r\n      case 3:\r\n        weekDay -= 14 - day;\r\n        break;\r\n      case 4:\r\n        weekDay -= 4 - day;\r\n        break;    \r\n      case 5:\r\n        weekDay -= 9 - day;\r\n        break;\r\n      case 6:\r\n        weekDay -= 6 - day;\r\n        break;\r\n      case 7:\r\n        weekDay -= 11 - day;\r\n        break;\r\n      case 8:\r\n        weekDay -= 8 - day;\r\n        break;\r\n      case 9:\r\n        weekDay -= 5 - day;\r\n        break;\r\n      case 10:\r\n        weekDay -= 10 - day;\r\n        break;\r\n      case 11:\r\n        weekDay -= 7 - day;\r\n        break;\r\n      case 12:\r\n        weekDay -= 12 - day;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    while(weekDay > 6)  \r\n      weekDay -= 7;\r\n    \r\n    while(weekDay < 0)\r\n      weekDay += 7;\r\n\r\n    return weekDay;\r\n  }\r\n\r\n  Offset(dayweek){\r\n    let offset = [];\r\n    for (let x = 0; x < dayweek; x++) {\r\n      offset.push(x);\r\n    }\r\n    return offset;\r\n  }\r\n\r\n  Present(monthdays){\r\n    let days = [];\r\n    for (let x = 1; x <= monthdays; x++) {\r\n      days.push(x);\r\n    }\r\n    return days;\r\n  }\r\n\r\n  OffsetRight(monthdays, dayweek){\r\n    let offset = 0;\r\n    let comparison = monthdays + dayweek;\r\n\r\n    if (comparison > 28 && comparison < 35)\r\n      offset = 35 - comparison;\r\n    else if (comparison > 35 && comparison < 42)\r\n      offset = 42 - comparison;\r\n\r\n    let restset = [];\r\n    for (let x = 1; x <= offset; x++) {\r\n      restset.push(x);\r\n    }\r\n    return restset;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"calendar-grid\">\r\n          {this.state.weekname.map(week => {\r\n            return <Day key={week} isBlank height=\"15px\" number={week} />;\r\n          })}\r\n          {this.state.offset.map(days => {\r\n            return <Day key={days + 40} isBlank />;\r\n          })}\r\n          {this.state.days.map(day => {\r\n            return <Day key={day} number={day} remindDate={this.props.remindDate} />;\r\n          })}\r\n          {this.state.restset.map(days => {\r\n            return <Day key={days + 50} isBlank />;\r\n          })}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './index.css';\r\n\r\nexport default class MonthYearSearch extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      month: this.props.currentMonth,\r\n      year: this.props.currentYear,\r\n    };\r\n\r\n    this.eventHandler = this.eventHandler.bind(this);\r\n    this.Verify = this.Verify.bind(this);\r\n  }\r\n\r\n  Verify(event){\r\n    if(this.state.month > 12 || this.state.month < 1 || this.state.year === 0 || this.state.year < 100){\r\n      alert(\"Invalid Date\\nAccepts only date between 1-12/100-9999\");\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n    this.props.changeDate(this.state.month, this.state.year);\r\n    event.preventDefault();\r\n  }\r\n\r\n  eventHandler(event){\r\n    if(isNaN(Number(event.target.value)) || String(event.target.value).length > 4)\r\n      return;\r\n    this.setState({ [event.target.id]: Number(event.target.value) });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <form className=\"form-grid\" onSubmit={this.Verify}>\r\n          <span className=\"label\" >Month:</span>\r\n          <input className=\"input\" id=\"month\" type=\"text\" onChange={this.eventHandler} value={this.state.month} ></input>\r\n          <span className=\"label\" >Year:</span>\r\n          <input className=\"input\" id=\"year\" type=\"text\" onChange={this.eventHandler} value={this.state.year} ></input>\r\n          <button className=\"button\" type=\"submit\">GO!</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './index.css';\r\n\r\nexport default class DateReminder extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      date: this.props.date,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let month = new Date(this.state.date).getUTCMonth();\r\n    if(month === 0) month = 12;\r\n\r\n    return (\r\n      <div className=\"datereminder-container\">\r\n        <span className=\"date-name\" >{new Date(this.state.date).getUTCDate()}/{month}/{new Date(this.state.date).getUTCFullYear()}</span>\r\n        <button className=\"remove\" onClick={() => this.props.removeReminder(this.state.date)} >Remove</button>\r\n        <button className=\"goto\" onClick={() => this.props.changeDate(month, new Date(this.state.date).getUTCFullYear())} >Go to</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './index.css';\r\n\r\nimport DayGrid from './DayGrid';\r\nimport SearchDate from './SearchDate';\r\nimport DateReminder from './Reminder';\r\n\r\nexport default class Calendar extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      day: new Date().getUTCDate(),\r\n      month: new Date().getUTCMonth() + 1,\r\n      year: new Date().getUTCFullYear(),\r\n      monthNames: [\"\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\r\n      remindDates: [],\r\n    };\r\n\r\n    this.RawChangeDate = this.RawChangeDate.bind(this);\r\n    this.RemindDate = this.RemindDate.bind(this);\r\n    this.ForgetDate = this.ForgetDate.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.RemindDate(new Date().getDate());\r\n  }\r\n\r\n  RemindDate(day){\r\n    let date = new Date(this.state.year, this.state.month, day).getTime();\r\n    if(this.state.remindDates.indexOf(date) > -1)\r\n      return;\r\n    this.setState({ remindDates: [...this.state.remindDates, date] });\r\n  }\r\n\r\n  ForgetDate(date){\r\n    let item = this.state.remindDates.indexOf(date);\r\n    let remindDates = this.state.remindDates;\r\n    remindDates.splice(item, 1);\r\n    this.setState({ remindDates });\r\n  }\r\n\r\n  MonthName(){\r\n    return this.state.monthNames[this.state.month];\r\n  }\r\n\r\n  RawChangeDate(month, year){\r\n    this.setState({ month, year });\r\n  }\r\n\r\n  ChangeDate(isForward){\r\n    let month = 0;\r\n    isForward ? month = this.state.month + 1 : month = this.state.month - 1;\r\n    if(month > 12){\r\n      month -= 12;\r\n      this.setState({ year: this.state.year + 1 });\r\n    }\r\n    else if(month < 1){\r\n      month += 12 ;\r\n      this.setState({ year: this.state.year - 1 });\r\n    }\r\n    this.setState({ month });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div>\r\n          <SearchDate changeDate={this.RawChangeDate} currentMonth={this.state.month} currentYear={this.state.year} />\r\n        </div>\r\n        <div className=\"top-container\">\r\n          <span className=\"material-icons button-month-left\" onClick={() => this.ChangeDate(false)} >keyboard_arrow_left</span>\r\n          <div className=\"date\">\r\n            <span className=\"month\" >{this.MonthName()} - </span>\r\n            <span className=\"year\" >{this.state.year}</span>\r\n          </div>\r\n          <span className=\"material-icons button-month-right\" onClick={() => this.ChangeDate(true)} >keyboard_arrow_right</span>\r\n        </div>\r\n        <div>\r\n          <DayGrid month={this.state.month} year={this.state.year} remindDate={this.RemindDate} />\r\n        </div>\r\n        <div className=\"reminder-block\">\r\n          <div className=\"reminder-text\">\r\n            <span className=\"reminder-title\" >Dates to Remind</span>\r\n            <br/>\r\n            <span className=\"reminder-tip\" >click in some day to remind it</span>\r\n          </div>\r\n          {this.state.remindDates.map(date => {\r\n            let daycode = new Date(date).getTime();\r\n            return <DateReminder key={daycode} date={daycode} removeReminder={this.ForgetDate} changeDate={this.RawChangeDate} />  \r\n          })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\nimport './index.css';\nimport Calendar from './Calendar';\n\nexport default class App extends Component{\n  render(){\n    return (\n      <div className=\"main\">\n        <Calendar />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}